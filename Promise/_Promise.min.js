"use strict";function _defineProperty(n,t,i){return t in n?Object.defineProperty(n,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):n[t]=i,n}class _Promise{constructor(n){if(_defineProperty(this,"resolve",n=>{const t=this.functionChain.findIndex(n=>"success"===n.type);t<0||this.handle(t,n)}),_defineProperty(this,"reject",n=>{const t=this.functionChain.findIndex(n=>"error"===n.type);if(t<0)return console.log("UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch().");this.handle(t,n)}),!n||"[object Function]"!={}.toString.call(n))throw new TypeError(`Promise resolver ${n} is not a function`);this.functionChain=[],process.nextTick(()=>{try{n(this.resolve,this.reject)}catch(n){this.reject(n)}})}handle(n,t){const i=this.functionChain[n].func;this.functionChain=this.functionChain.slice(n+1);try{const n=i(t);if(n instanceof _Promise)return void n.setFunctionChain(this.functionChain);this.resolve(n)}catch(n){this.reject(n)}}then(n){return this.functionChain.push({type:"success",func:n}),this}catch(n){return this.functionChain.push({type:"error",func:n}),this}setFunctionChain(n){this.functionChain=n}}module.exports=_Promise;
